{"version":3,"sources":["webpack://InactivityLogout/webpack/universalModuleDefinition","webpack://InactivityLogout/webpack/bootstrap","webpack://InactivityLogout/./main.ts","webpack://InactivityLogout/./inactivity-countdown-timer.ts","webpack://InactivityLogout/./ie8EventListenerPolyfill.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","InactivityCountdownTimer","ie8EventListenerPolyfill","defaultInactivityConfig","idleTimeoutTime","localStorageKey","resetEvents","params","countingDown","this","startCountDownTimerAt","console","log","timeoutTime","timeoutCallback","countDownCallback","countDownCancelledCallback","redirectHREF","localStorage","detectAndAssignLocalStorage","length","document","addEventListener","start","setLastResetTimeStamp","Date","getTime","startPrivate","stop","clearInterval","idleTimeoutID","cleanup","removeEventListener","handleEvent","eventName","currentTime","precision","currentTimerPrecision","setInterval","checkIdleTime","resetTimer","timeout","redirect","milliSecondDiff","getLastResetTimeStamp","timeRemaining","checkTimerPrecision","handleCountDown","inCountDownTimeFrame","Math","abs","ceil","nextTimeoutWhen","lastResetTimeStamp","lastResetTimeStampString","getItem","parseInt","error","timestamp","setItem","toString","result","uid","storage","removeItem","exception","url","location","href","Event","preventDefault","returnValue","stopPropagation","cancelBubble","Element","eventListeners","type","listener","self","wrapper","e","target","srcElement","currentTarget","wrapper2","readyState","attachEvent","push","counter","eventListener","detachEvent","splice","HTMLDocument","Window"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"InactivityLogout\"] = factory();\n\telse\n\t\troot[\"InactivityLogout\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export {InactivityCountdownTimer} from './inactivity-countdown-timer'\nexport {IInactivityConfig} from './inactivity-countdown-timer'\nexport {ie8EventListenerPolyfill} from './ie8EventListenerPolyfill'\n","export interface IInactivityConfig {\n    idleTimeoutTime?: number;\n    startCountDownTimerAt?: number;\n    resetEvents?: string[];\n    timeoutCallback?(): void;\n    countDownCallback?(secondsLeft: number): void;\n    countDownCancelledCallback?(): void;\n    localStorageKey?: string;\n    redirectHREF?: string;\n}\n\ninterface IWindow extends Window {\n    addEventListener(type: string, listener: any, useCapture?: boolean): void;\n    removeEventListener(type: string, listener?: any, useCapture?: boolean): void;\n}\n\ndeclare var window: IWindow;\n\ninterface IDocument extends Document {\n    addEventListener(type: string, listener: any, useCapture?: boolean): void;\n    removeEventListener(type: string, listener?: any, useCapture?: boolean): void;\n}\n\ndeclare var document: IDocument;\n\nconst defaultInactivityConfig: IInactivityConfig = {\n    idleTimeoutTime: 10000,\n    localStorageKey: 'inactivity_logout_local_storage',\n    resetEvents: ['click','mousemove','keypress']\n};\n\n// require('./ie8addEventListener');\nexport class InactivityCountdownTimer {\n    private timeoutTime: number;\n    private localStorageKey: string;\n    private lastResetTimeStamp: number;\n    private localStorage: Storage;\n    private redirectHREF: string;\n    private countingDown: boolean = false;\n\n    private idleTimeoutTime: number;\n    private startCountDownTimerAt: number;\n    private resetEvents: string[];\n    private timeoutCallback: () => void;\n    private countDownCallback: (secondsLeft: number) => void;\n    private countDownCancelledCallback: () => void;\n    private idleTimeoutID: number;\n    private currentTimerPrecision: number;\n    /**\n     * @param params\n     * - **idleTimeoutTime**: 10000 - ms / 10 seconds\n     * - **localStorageKey**: 'inactivity_logout_local_storage'\n     */\n    constructor(private params: IInactivityConfig = defaultInactivityConfig) {\n        // config var defaults\n        // how long you can be idle for before we time you out\n        this.idleTimeoutTime = params.idleTimeoutTime || defaultInactivityConfig.idleTimeoutTime;\n\n        if((typeof(params.startCountDownTimerAt)) === 'number'){\n            // if start count down timer is present make sure its a number and less than idleTimeoutTime\n            if(params.startCountDownTimerAt > this.idleTimeoutTime) {\n                console.log('startCountdown time must be smaller than idleTimeoutTime, setting to idleTimeoutTime');\n                this.startCountDownTimerAt = this.idleTimeoutTime;\n                this.timeoutTime = 1000; // start the countdown\n            } else {\n                this.startCountDownTimerAt = params.startCountDownTimerAt;\n                this.timeoutTime = this.idleTimeoutTime - this.startCountDownTimerAt;\n            }\n        } else {\n            // don't use count down timer\n            this.startCountDownTimerAt = 0;\n            this.timeoutTime = this.idleTimeoutTime;\n        }\n\n        this.timeoutCallback = params.timeoutCallback;\n        this.countDownCallback = params.countDownCallback;\n        this.countDownCancelledCallback = params.countDownCancelledCallback;\n        this.localStorageKey = params.localStorageKey || defaultInactivityConfig.localStorageKey;\n        this.resetEvents = params.resetEvents || defaultInactivityConfig.resetEvents;\n        this.redirectHREF = params.redirectHREF;\n\n        // setup local storage\n        this.localStorage = this.detectAndAssignLocalStorage();\n\n        // attach events that will rest the timers\n        // this ends up calling the this.handleEvent function\n        // see README.md for more on why we are passing 'this'\n        for(let i=0; i < this.resetEvents.length; i++) {\n            document.addEventListener(this.resetEvents[i], this, false)\n        }\n        window.addEventListener('load', this, false); // start count down when window is loaded\n        // this fixes a bug in ie11 where the local storage does not sync\n        // https://connect.microsoft.com/IE/feedback/details/812563/ie-11-local-storage-synchronization-issues\n        window.addEventListener('storage', function() {}); // effectively a no-op\n        this.start();\n    }\n\n    /**\n     * Starts the timer\n     */\n    public start(): void {\n        this.setLastResetTimeStamp((new Date()).getTime());\n        this.startPrivate(this.timeoutTime)\n    }\n\n    /**\n     * Clears the timer\n     */\n    public stop(): void {\n        window.clearInterval(this.idleTimeoutID);\n    }\n\n    /**\n     * **You must call cleanup** before you delete the object.\n     * As the timer in the class is calling a method on itself\n     * it will not be garbage collected if you just delete it.\n     */\n    public cleanup(): void {\n        for(let i=0; i < this.resetEvents.length; i++) {\n            document.removeEventListener(this.resetEvents[i], this, false)\n        }\n        window.removeEventListener('load', this, false);\n        window.removeEventListener('storage', function() {});\n        this.stop();\n    }\n\n    // see readme about why we use handleEvent\n    private handleEvent(eventName: string): void {\n        // we don't need to do anything with the eventName\n        // as we want all events to fire the same actions\n        let currentTime = (new Date).getTime();\n        this.setLastResetTimeStamp(currentTime);\n    }\n\n    private startPrivate(precision: number) {\n        this.currentTimerPrecision = precision;\n        this.idleTimeoutID = window.setInterval(() => {\n            this.checkIdleTime();\n        }, precision);\n    }\n\n    private resetTimer(precision: number){\n        this.stop();\n        this.startPrivate(precision);\n    }\n\n    private timeout(): void {\n        this.cleanup();\n        if(this.timeoutCallback){\n            this.timeoutCallback();\n        }\n        if(this.redirectHREF){\n            this.redirect(this.redirectHREF);\n        }\n    }\n\n    private checkIdleTime(){\n        let currentTimeStamp = (new Date()).getTime();\n        let lastResetTimeStamp = this.getLastResetTimeStamp();\n        let milliSecondDiff = currentTimeStamp - lastResetTimeStamp;\n        let timeRemaining = this.idleTimeoutTime - milliSecondDiff;\n        this.checkTimerPrecision(timeRemaining);\n        this.handleCountDown(timeRemaining);\n        if(milliSecondDiff >= this.idleTimeoutTime) {\n            this.timeout();\n        }\n    }\n\n    private handleCountDown(timeRemaining: number) {\n        let inCountDownTimeFrame = (timeRemaining <= this.startCountDownTimerAt);\n        if(inCountDownTimeFrame && this.countDownCallback){\n            this.countingDown = true;\n            this.countDownCallback(Math.abs(Math.ceil(timeRemaining/1000)));\n        } else if (!inCountDownTimeFrame && this.countingDown) {\n            if(this.countDownCancelledCallback) {\n                this.countDownCancelledCallback();\n            }\n            this.countingDown = false;\n        }\n    }\n\n\n    private checkTimerPrecision(timeRemaining: number) {\n        // when we are counting down we want to\n        // increase the interval precision to seconds\n        if(timeRemaining <= this.startCountDownTimerAt){\n            // don't change if it's already seconds\n            if(this.currentTimerPrecision !== 1000) {\n                this.resetTimer(1000)\n            }\n        }\n        else {\n            // the js timer can be out by milliseconds, we need to set the timer to:\n            // the time remaining - when we start the count down timer\n            // eg 15 sec timeout, 10 sec countdown, time remaining 14345 secs\n            // timeout should be 4345 secs\n            let nextTimeoutWhen = timeRemaining - this.startCountDownTimerAt;\n            this.resetTimer(nextTimeoutWhen);\n        }\n    }\n\n    private getLastResetTimeStamp(): number {\n        let lastResetTimeStamp: number;\n        if(this.localStorage){\n            let lastResetTimeStampString: string;\n            try {\n                lastResetTimeStampString = this.localStorage.getItem(this.localStorageKey);\n                lastResetTimeStamp = parseInt(lastResetTimeStampString, 10)\n            } catch(error) {\n                console.log('Error getting last reset timestamp', error)\n            }\n        } else {\n            lastResetTimeStamp = this.lastResetTimeStamp;\n        }\n        return lastResetTimeStamp;\n    }\n\n    private setLastResetTimeStamp(timestamp: number): void {\n        if(this.localStorage){\n            try{\n                this.localStorage.setItem(this.localStorageKey, timestamp.toString());\n            } catch (error){\n                console.log('Error setting last reset timestamp', error)\n            }\n        } else {\n            this.lastResetTimeStamp = timestamp;\n        }\n    }\n\n    private detectAndAssignLocalStorage(): Storage {\n        let uid: string = (new Date()).getTime().toString() + 'detectAndAssignLocalStorage';\n        let storage: Storage = localStorage;\n        let result: boolean;\n        try {\n            storage.setItem(uid, uid);\n            result = storage.getItem(uid) === uid;\n            storage.removeItem(uid);\n            return result && storage;\n        } catch(exception) {\n            console.log('LOCAL STORAGE IS NOT AVAILABLE FOR SYNCING TIMEOUT ACROSS TABS', exception)\n        }\n    }\n\n    // cannot mock location changes\n    // so little function allows us to verify redirect is called\n    private redirect (url: string): void {\n        if (url) {\n            window.location.href = url;\n        }\n    }\n}\n\n","// This code from MDN (Mozilla Developer Network)\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n// Public domain licenced\n// https://creativecommons.org/publicdomain/zero/1.0/\n\n// ie8 specific typings\ninterface IDocument extends Document {\n    attachEvent(event: string, obj: any): boolean;\n}\ndeclare var document: IDocument;\ndeclare var Event;\n\nexport const ie8EventListenerPolyfill = (function() {\n    if (!Event.prototype.preventDefault) {\n        Event.prototype.preventDefault=function() {\n            this.returnValue=false;\n        };\n    }\n    if (!Event.prototype.stopPropagation) {\n        Event.prototype.stopPropagation=function() {\n            this.cancelBubble=true;\n        };\n    }\n    if (!Element.prototype.addEventListener) {\n        var eventListeners=[];\n\n        var addEventListener=function(type,listener /*, useCapture (will be ignored) */) {\n            var self=this;\n            var wrapper=function(e) {\n                e.target=e.srcElement;\n                e.currentTarget=self;\n                if (typeof listener.handleEvent != 'undefined') {\n                    listener.handleEvent(e);\n                } else {\n                    listener.call(self,e);\n                }\n            };\n            if (type==\"DOMContentLoaded\") {\n                var wrapper2=function(e) {\n                    if (document.readyState==\"complete\") {\n                        wrapper(e);\n                    }\n                };\n                document.attachEvent(\"onreadystatechange\",wrapper2);\n                eventListeners.push({object:this,type:type,listener:listener,wrapper:wrapper2});\n\n                if (document.readyState==\"complete\") {\n                    var e=new Event();\n                    e.srcElement=window;\n                    wrapper2(e);\n                }\n            } else {\n                this.attachEvent(\"on\"+type,wrapper);\n                eventListeners.push({object:this,type:type,listener:listener,wrapper:wrapper});\n            }\n        };\n        var removeEventListener=function(type,listener /*, useCapture (will be ignored) */) {\n            var counter=0;\n            while (counter<eventListeners.length) {\n                var eventListener=eventListeners[counter];\n                if (eventListener.object==this && eventListener.type==type && eventListener.listener==listener) {\n                    if (type==\"DOMContentLoaded\") {\n                        this.detachEvent(\"onreadystatechange\",eventListener.wrapper);\n                    } else {\n                        this.detachEvent(\"on\"+type,eventListener.wrapper);\n                    }\n                    eventListeners.splice(counter, 1);\n                    break;\n                }\n                ++counter;\n            }\n        };\n        Element.prototype.addEventListener=addEventListener;\n        Element.prototype.removeEventListener=removeEventListener;\n        if (HTMLDocument) {\n            HTMLDocument.prototype.addEventListener=addEventListener;\n            HTMLDocument.prototype.removeEventListener=removeEventListener;\n        }\n        if (Window) {\n            Window.prototype.addEventListener=addEventListener;\n            Window.prototype.removeEventListener=removeEventListener;\n        }\n    }\n})();"],"sourceRoot":""}